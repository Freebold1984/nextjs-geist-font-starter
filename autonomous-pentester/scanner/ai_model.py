import joblib
import os

class TrainedVulnerabilityModel:
    """
    Wrapper for the trained ML model for vulnerability detection.
    """

    def __init__(self, model_path=None):
        self.model_path = model_path or os.getenv("VULN_MODEL_PATH", "autonomous-pentester/models/vulnerability_model.joblib")
        if not os.path.exists(self.model_path):
            raise FileNotFoundError(f"Trained model not found at {self.model_path}")
        self.model = joblib.load(self.model_path)

    def predict(self, text):
        """
        Predict vulnerability label for the input text.
        """
        prediction = self.model.predict([text])
        # Return a dict with predicted label and placeholder details
        return {
            "type": prediction[0],
            "severity": "Unknown",
            "description": text,
            "payload": None
        }
