from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import joblib
from data_preprocessing import load_vulnerability_dataset

def train_vulnerability_model(dataset_path, model_output_path):
    # Load dataset
    data, labels = load_vulnerability_dataset(dataset_path)

    # Split dataset
    X_train, X_test, y_train, y_test = train_test_split(data, labels, test_size=0.2, random_state=42)

    # Create pipeline
    model = make_pipeline(TfidfVectorizer(), MultinomialNB())

    # Train model
    model.fit(X_train, y_train)

    # Evaluate
    y_pred = model.predict(X_test)
    print(classification_report(y_test, y_pred))

    # Save model
    joblib.dump(model, model_output_path)
    print(f"Model saved to {model_output_path}")

if __name__ == "__main__":
    dataset_path = "autonomous-pentester/training/sample_dataset.json"
    model_output_path = "autonomous-pentester/models/vulnerability_model.joblib"
    train_vulnerability_model(dataset_path, model_output_path)
